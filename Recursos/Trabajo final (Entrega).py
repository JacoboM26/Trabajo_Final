# -*- coding: utf-8 -*-
"""trabajo final programaci√≥n.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1OogUoNEiy_McOWnmYKbeKQy4SEwCXqJK
"""

import random
from datetime import datetime
import json
import os
citas = {}
atenciones = {}

ADMIN_PASSWORD = "admin123"

CITAS_FILE = "citas.json"

def cargar_citas():
    if os.path.exists(CITAS_FILE):
        with open(CITAS_FILE, "r") as file:
            data = json.load(file)
            if data:
                for cedula, info in data.items():
                    if info["estado"] == "pendiente":
                        print(f"La cita con c√©dula {cedula} est√° en estado pendiente.")
                return data
    generar_citas_aleatorias()
    guardar_citas()
    return citas

def guardar_citas():
    with open(CITAS_FILE, "w") as file:
        json.dump(citas, file, indent=4)

def generar_citas_aleatorias():
    fecha_actual = datetime.now().strftime("%Y-%m-%d")
    for _ in range(10):
        cedula = str(random.randint(10000000, 99999999))
        if cedula not in citas:
            hora = f"{random.randint(8, 16):02d}:{random.choice(['00', '30'])}"
            citas[cedula] = {"fecha": fecha_actual, "hora": hora, "estado": "pendiente"}

citas = cargar_citas()


def menu_principal():
    while True:
        print("\n--- Bienvenido a AgendApp üìñ ---")
        print("1. Consultar cita")
        print("2. Confirmar ‚úÖ o cancelar ‚ùå cita")
        print("3. Men√∫ Administrador üë®‚Äçüíª")
        print("4. Salir")
        opcion = input("Seleccione una opci√≥n: ")

        if opcion == "1":
            consultar_cita()
        elif opcion == "2":
            confirmar_o_cancelar_cita_usuario()
        elif opcion == "3":
            menu_administrador()
        elif opcion == "4":
            print("¬°Gracias por usar el sistema! üòÅ ")
            break
        else:
            print("Opci√≥n no v√°lida, intente de nuevo. ‚ùå ")

def consultar_cita():
    cedula = input("\nIngrese su c√©dula: ")
    if cedula in citas:
        cita = citas[cedula]
        print(f"\n--- Informaci√≥n de la cita ---")
        print(f"C√©dula: {cedula}")
        print(f"Fecha: {cita['fecha']}")
        print(f"Hora: {cita['hora']}")
        print(f"Estado: {cita['estado']}")
        registrar_evento(cedula, "Consulta de cita realizada.")
    else:
        print("No hay una cita registrada para esta c√©dula.")

def confirmar_o_cancelar_cita_usuario():
    cedula = input("\nIngrese su c√©dula: ")
    if cedula in citas:
        print("1. Confirmar cita ‚úÖ")
        print("2. Cancelar cita ‚ùå")
        opcion = input("Seleccione una opci√≥n: ")

        if opcion == "1":
            citas[cedula]["estado"] = "confirmada"
            print("Cita confirmada.")
            registrar_evento(cedula, "Cita confirmada por el usuario.")
        elif opcion == "2":
            citas[cedula]["estado"] = "cancelada"
            print("Cita cancelada.")
            registrar_evento(cedula, "Cita cancelada por el usuario.")
        else:
            print("Opci√≥n no v√°lida.")
    else:
        print("No hay una cita registrada para esta c√©dula.")

def menu_administrador():
    password = input("\nIngrese la contrase√±a de administrador: ")
    if password == ADMIN_PASSWORD:
        while True:
            print("\n--- Men√∫ Administrador üìñ ---")
            print("1. Agregar usuario y cita üë® ")
            print("2. Confirmar ‚úÖ o cancelar ‚ùå cita")
            print("3. Generar reporte ü™™ ")
            print("4. Salir al men√∫ principal")
            opcion = input("Seleccione una opci√≥n: ")

            if opcion == "1":
                agregar_usuario_y_cita()
            elif opcion == "2":
                modificar_cita()
            elif opcion == "3":
                generar_reporte()
            elif opcion == "4":
                break
            else:
                print("Opci√≥n no v√°lida, intente de nuevo ‚ùå.")
    else:
        print("Contrase√±a incorrecta‚ùå.")

def agregar_usuario_y_cita():
    cedula = input("\nIngrese la c√©dula del paciente: ")
    fecha = input("Ingrese la fecha de la cita (YYYY-MM-DD): ")
    hora = input("Ingrese la hora de la cita (HH:MM): ")

    if cedula not in citas:
        citas[cedula] = {"fecha": fecha, "hora": hora, "estado": "pendiente"}
        guardar_citas()
        print("Usuario y cita agregados con √©xito.")
        registrar_evento(cedula, "Cita registrada.")
    else:
        print("Ya existe una cita para esta c√©dula.")


def modificar_cita():
    cedula = input("\nIngrese la c√©dula del paciente: ")
    if cedula in citas:
        print("1. Confirmar cita")
        print("2. Cancelar cita")
        opcion = input("Seleccione una opci√≥n: ")

        if opcion == "1":
            citas[cedula]["estado"] = "confirmada"
            guardar_citas()
            print("Cita confirmada.")
            registrar_evento(cedula, "Cita confirmada.")
        elif opcion == "2":
            citas[cedula]["estado"] = "cancelada"
            guardar_citas()
            print("Cita cancelada.")
            registrar_evento(cedula, "Cita cancelada.")
        else:
            print("Opci√≥n no v√°lida.")
    else:
        print("No hay una cita registrada para esta c√©dula.")


def generar_reporte():
    print("\n--- Reporte de Citas ---")
    for cedula, datos in citas.items():
        print(f"C√©dula: {cedula}, Fecha: {datos['fecha']}, Hora: {datos['hora']}, Estado: {datos['estado']}")
    print("\n--- Eventos Registrados ---")
    for cedula, eventos in atenciones.items():
        print(f"C√©dula: {cedula}, Eventos: {', '.join(eventos)}")

def registrar_evento(cedula, evento):
    if cedula not in atenciones:
        atenciones[cedula] = []
    atenciones[cedula].append(evento)

menu_principal()